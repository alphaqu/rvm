define i32 @"DEFMain.ack(II)I.2"(i32 %0, i32 %1) #0 {
entry:
  %v3.not = icmp eq i32 %0, 0
  br i1 %v3.not, label %block1, label %block2

block2:                                           ; preds = %entry
  %v5 = icmp slt i32 %0, 1
  br i1 %v5, label %block8, label %block3

block5:                                           ; preds = %block3
  %v11 = icmp slt i32 %1, 1
  br i1 %v11, label %block8, label %block7

common.ret:                                       ; preds = %block1, %block4, %block7, %block8
  %common.ret.op = phi i32 [ %v9, %block8 ], [ %v18, %block7 ], [ %v23, %block4 ], [ %v25, %block1 ]
  ret i32 %common.ret.op

block8:                                           ; preds = %block2, %block5
  %v9 = add i32 %1, 1
  br label %common.ret

block7:                                           ; preds = %block5
  %v13 = add nsw i32 %0, -1
  %v16 = add nsw i32 %1, -1
  %v17 = call i32 @"DEFMain.ack(II)I"(i32 %0, i32 %v16)
  %v18 = call i32 @"DEFMain.ack(II)I"(i32 %v13, i32 %v17)
  br label %common.ret

block3:                                           ; preds = %block2
  %v20.not = icmp eq i32 %1, 0
  br i1 %v20.not, label %block4, label %block5

block4:                                           ; preds = %block3
  %v22 = add nsw i32 %0, -1
  %v23 = call i32 @"DEFMain.ack(II)I"(i32 %v22, i32 1)
  br label %common.ret

block1:                                           ; preds = %entry
  %v25 = add i32 %1, 1
  br label %common.ret
}