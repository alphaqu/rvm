use crate::{Class, Field, Reference, Runtime};
use jni_sys::{jint, JNIEnv, JNINativeInterface_};
use rvm_core::{Id, Kind};
use std::ffi::c_void;
use std::mem::transmute;
use std::ptr::{null, null_mut};
use std::sync::{Arc, Weak};

pub struct JFieldId {
	offset: u32,
	kind: Kind,
}

pub struct JNI {
	env: JNIEnv,
}

impl JNI {
	pub fn runtime<V>(env: *mut JNIEnv, func: impl FnOnce(&mut Runtime) -> V) -> V {
		return unsafe {
			let runtime = (*(*env)).reserved0;
			let runtime: *mut Runtime = transmute(runtime);
			func(&mut *runtime)
		};
	}

	pub fn new(runtime: Arc<Runtime>) -> JNI {
		let mut runtime = Arc::as_ptr(&runtime);
		let env = Box::into_raw(Box::new(JNINativeInterface_ {
			reserved0: unsafe { transmute(runtime) },
			reserved1: null_mut(),
			reserved2: null_mut(),
			reserved3: null_mut(),
			GetVersion: None,
			DefineClass: None,
			FindClass: None,
			FromReflectedMethod: None,
			FromReflectedField: None,
			ToReflectedMethod: None,
			GetSuperclass: None,
			IsAssignableFrom: None,
			ToReflectedField: None,
			Throw: None,
			ThrowNew: None,
			ExceptionOccurred: None,
			ExceptionDescribe: None,
			ExceptionClear: None,
			FatalError: None,
			PushLocalFrame: None,
			PopLocalFrame: None,
			NewGlobalRef: None,
			DeleteGlobalRef: None,
			DeleteLocalRef: None,
			IsSameObject: None,
			NewLocalRef: None,
			EnsureLocalCapacity: None,
			AllocObject: None,
			NewObject: None,
			NewObjectV: None,
			NewObjectA: None,
			GetObjectClass: None,
			IsInstanceOf: None,
			GetMethodID: None,
			CallObjectMethod: None,
			CallObjectMethodV: None,
			CallObjectMethodA: None,
			CallBooleanMethod: None,
			CallBooleanMethodV: None,
			CallBooleanMethodA: None,
			CallByteMethod: None,
			CallByteMethodV: None,
			CallByteMethodA: None,
			CallCharMethod: None,
			CallCharMethodV: None,
			CallCharMethodA: None,
			CallShortMethod: None,
			CallShortMethodV: None,
			CallShortMethodA: None,
			CallIntMethod: None,
			CallIntMethodV: None,
			CallIntMethodA: None,
			CallLongMethod: None,
			CallLongMethodV: None,
			CallLongMethodA: None,
			CallFloatMethod: None,
			CallFloatMethodV: None,
			CallFloatMethodA: None,
			CallDoubleMethod: None,
			CallDoubleMethodV: None,
			CallDoubleMethodA: None,
			CallVoidMethod: None,
			CallVoidMethodV: None,
			CallVoidMethodA: None,
			CallNonvirtualObjectMethod: None,
			CallNonvirtualObjectMethodV: None,
			CallNonvirtualObjectMethodA: None,
			CallNonvirtualBooleanMethod: None,
			CallNonvirtualBooleanMethodV: None,
			CallNonvirtualBooleanMethodA: None,
			CallNonvirtualByteMethod: None,
			CallNonvirtualByteMethodV: None,
			CallNonvirtualByteMethodA: None,
			CallNonvirtualCharMethod: None,
			CallNonvirtualCharMethodV: None,
			CallNonvirtualCharMethodA: None,
			CallNonvirtualShortMethod: None,
			CallNonvirtualShortMethodV: None,
			CallNonvirtualShortMethodA: None,
			CallNonvirtualIntMethod: None,
			CallNonvirtualIntMethodV: None,
			CallNonvirtualIntMethodA: None,
			CallNonvirtualLongMethod: None,
			CallNonvirtualLongMethodV: None,
			CallNonvirtualLongMethodA: None,
			CallNonvirtualFloatMethod: None,
			CallNonvirtualFloatMethodV: None,
			CallNonvirtualFloatMethodA: None,
			CallNonvirtualDoubleMethod: None,
			CallNonvirtualDoubleMethodV: None,
			CallNonvirtualDoubleMethodA: None,
			CallNonvirtualVoidMethod: None,
			CallNonvirtualVoidMethodV: None,
			CallNonvirtualVoidMethodA: None,
			GetFieldID: None,
			GetObjectField: None,
			GetBooleanField: None,
			GetByteField: None,
			GetCharField: None,
			GetShortField: None,
			GetIntField: None,
			GetLongField: None,
			GetFloatField: None,
			GetDoubleField: None,
			SetObjectField: None,
			SetBooleanField: None,
			SetByteField: None,
			SetCharField: None,
			SetShortField: None,
			SetIntField: None,
			SetLongField: None,
			SetFloatField: None,
			SetDoubleField: None,
			GetStaticMethodID: None,
			CallStaticObjectMethod: None,
			CallStaticObjectMethodV: None,
			CallStaticObjectMethodA: None,
			CallStaticBooleanMethod: None,
			CallStaticBooleanMethodV: None,
			CallStaticBooleanMethodA: None,
			CallStaticByteMethod: None,
			CallStaticByteMethodV: None,
			CallStaticByteMethodA: None,
			CallStaticCharMethod: None,
			CallStaticCharMethodV: None,
			CallStaticCharMethodA: None,
			CallStaticShortMethod: None,
			CallStaticShortMethodV: None,
			CallStaticShortMethodA: None,
			CallStaticIntMethod: None,
			CallStaticIntMethodV: None,
			CallStaticIntMethodA: None,
			CallStaticLongMethod: None,
			CallStaticLongMethodV: None,
			CallStaticLongMethodA: None,
			CallStaticFloatMethod: None,
			CallStaticFloatMethodV: None,
			CallStaticFloatMethodA: None,
			CallStaticDoubleMethod: None,
			CallStaticDoubleMethodV: None,
			CallStaticDoubleMethodA: None,
			CallStaticVoidMethod: None,
			CallStaticVoidMethodV: None,
			CallStaticVoidMethodA: None,
			GetStaticFieldID: None,
			GetStaticObjectField: None,
			GetStaticBooleanField: None,
			GetStaticByteField: None,
			GetStaticCharField: None,
			GetStaticShortField: None,
			GetStaticIntField: None,
			GetStaticLongField: None,
			GetStaticFloatField: None,
			GetStaticDoubleField: None,
			SetStaticObjectField: None,
			SetStaticBooleanField: None,
			SetStaticByteField: None,
			SetStaticCharField: None,
			SetStaticShortField: None,
			SetStaticIntField: None,
			SetStaticLongField: None,
			SetStaticFloatField: None,
			SetStaticDoubleField: None,
			NewString: None,
			GetStringLength: None,
			GetStringChars: None,
			ReleaseStringChars: None,
			NewStringUTF: None,
			GetStringUTFLength: None,
			GetStringUTFChars: None,
			ReleaseStringUTFChars: None,
			GetArrayLength: None,
			NewObjectArray: None,
			GetObjectArrayElement: None,
			SetObjectArrayElement: None,
			NewBooleanArray: None,
			NewByteArray: None,
			NewCharArray: None,
			NewShortArray: None,
			NewIntArray: None,
			NewLongArray: None,
			NewFloatArray: None,
			NewDoubleArray: None,
			GetBooleanArrayElements: None,
			GetByteArrayElements: None,
			GetCharArrayElements: None,
			GetShortArrayElements: None,
			GetIntArrayElements: None,
			GetLongArrayElements: None,
			GetFloatArrayElements: None,
			GetDoubleArrayElements: None,
			ReleaseBooleanArrayElements: None,
			ReleaseByteArrayElements: None,
			ReleaseCharArrayElements: None,
			ReleaseShortArrayElements: None,
			ReleaseIntArrayElements: None,
			ReleaseLongArrayElements: None,
			ReleaseFloatArrayElements: None,
			ReleaseDoubleArrayElements: None,
			GetBooleanArrayRegion: None,
			GetByteArrayRegion: None,
			GetCharArrayRegion: None,
			GetShortArrayRegion: None,
			GetIntArrayRegion: None,
			GetLongArrayRegion: None,
			GetFloatArrayRegion: None,
			GetDoubleArrayRegion: None,
			SetBooleanArrayRegion: None,
			SetByteArrayRegion: None,
			SetCharArrayRegion: None,
			SetShortArrayRegion: None,
			SetIntArrayRegion: None,
			SetLongArrayRegion: None,
			SetFloatArrayRegion: None,
			SetDoubleArrayRegion: None,
			RegisterNatives: None,
			UnregisterNatives: None,
			MonitorEnter: None,
			MonitorExit: None,
			GetJavaVM: None,
			GetStringRegion: None,
			GetStringUTFRegion: None,
			GetPrimitiveArrayCritical: None,
			ReleasePrimitiveArrayCritical: None,
			GetStringCritical: None,
			ReleaseStringCritical: None,
			NewWeakGlobalRef: None,
			DeleteWeakGlobalRef: None,
			ExceptionCheck: None,
			NewDirectByteBuffer: None,
			GetDirectBufferAddress: None,
			GetDirectBufferCapacity: None,
			GetObjectRefType: None,
		}));

		JNI { env }
	}
}

extern "C" fn get_version(env: *mut JNIEnv) -> jint {
	JNI::runtime(env, |runtime| 6969)
}

//	pub fn get_field_id(&self, class: Arc<Class>, name: &str, descriptor: &str) -> JFieldId {
// 		let instance = class.as_instance().unwrap();
// 		let field = instance.fields.get_keyed(name).unwrap();
// 		if field.ty.to_string() != descriptor {
// 			panic!("Field type missmatch");
// 		}
// 		JFieldId {
// 			offset: field.offset,
// 			kind: field.ty.kind(),
// 		}
// 	}
//
// 	pub unsafe fn set_object_field(&self, object: Reference, field: JFieldId, value: Reference) {
// 		let instance = object.to_class().unwrap();
// 		if field.kind != Kind::Reference {
// 			panic!();
// 		}
// 		instance.put(field.offset as usize, value);
// 	}
